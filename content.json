{"meta":{"title":"Shero","subtitle":"Just  be yourself","description":"ֻ���벻�룬û���ܲ���","author":"TMM","url":"http://yoursite.com"},"pages":[{"title":"Resume","date":"2017-08-26T02:46:05.000Z","updated":"2017-08-26T04:26:48.282Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"Hello Everyone ! Welcome to my zone!"}],"posts":[{"title":"Java集合类学习笔记","slug":"studynote1 ","date":"2017-08-26T02:26:05.026Z","updated":"2017-08-26T02:26:05.027Z","comments":true,"path":"2017/08/26/studynote1 /","link":"","permalink":"http://yoursite.com/2017/08/26/studynote1 /","excerpt":"","text":"Collection接口和Map接口 转载自：http://wilsonmar.com/1array.htm Collection接口 list接口： 特点： 是一维线性结构； list对象长短可变，且有序; list 存储的元素为对象类型； list的每个元素和数组一样都有下标，且下标都是从0开始的； list集合大小通过size（）获取; list元素使用add方法添加； list的元素使用get(下标)方法获取； list的元素可以重复，且可以为空值 实现类：ArrayList：底层是基于数组进行实现的，查询快，增删慢； 线程不安全，轻量级；LinkedList：底层是基于链表实现的，增删快，查询慢； 线程不安全Vector：底层是基于数组实现； 线程安全，重量级； set接口： 特点： 是一维线性结构； set对象长短可变 sett元素使用add方法添加； lset的元素不可以重复 实现类HashSet：按hash算法来存储集合中的元素。因此具有很好的存储和查找性能； 判断两个元素的标准是两个元素的equals方法比较相等，同时两个对象的hasCode()方法返回值也相等。 无序，存入顺序和读取顺序不一致； 可以保存null值； LinkedHashSet: 底层是基于链表实现的； 有序； 可以存入null值； TreeSet：底层结构是二叉树实现的； 无序； 可以存入null值 可以对存入的实现了comparable接口的对象类型进行自动排序 Map接口特点： map中存储的是键值对（使用Entry描述键值对） Entry键值对包括名字Key和值Value,且一一对应； 一般Key使用String类型，Value使用对象类型 Map的Key值不可以重复 实现类 HashMap:基于hash散列算法实现； 不是线程安全类； 可以存入null值； LinkedHashMap : 底层是基于链表实现的； 不是线程安全类； 有序； 可以存入null值； TreeMap :底层结构是树型结构实现的； 不是线程安全类； 无序； 不可以存入null值； HashTable:基于hash散列算法实现； 是线程安全类； 无序的； 可以存入null值；","categories":[{"name":"Study Notes","slug":"Study-Notes","permalink":"http://yoursite.com/categories/Study-Notes/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"集合","slug":"集合","permalink":"http://yoursite.com/tags/集合/"}]}]}